// automatically generated by root-gen-datareader.
// DO NOT EDIT.

package event

import (
	"go-hep.org/x/hep/groot/rtree"
)

// Data is the data contained in a rtree.Tree.
type Data struct {
	ROOT_Int32        int32       `groot:"Int32"`
	ROOT_Int64        int64       `groot:"Int64"`
	ROOT_UInt32       uint32      `groot:"UInt32"`
	ROOT_UInt64       uint64      `groot:"UInt64"`
	ROOT_Float32      float32     `groot:"Float32"`
	ROOT_Float64      float64     `groot:"Float64"`
	ROOT_Str          string      `groot:"Str"`
	ROOT_ArrayInt32   [10]int32   `groot:"ArrayInt32[10]"`
	ROOT_ArrayInt64   [10]int64   `groot:"ArrayInt64[10]"`
	ROOT_ArrayUInt32  [10]uint32  `groot:"ArrayUInt32[10]"`
	ROOT_ArrayUInt64  [10]uint64  `groot:"ArrayUInt64[10]"`
	ROOT_ArrayFloat32 [10]float32 `groot:"ArrayFloat32[10]"`
	ROOT_ArrayFloat64 [10]float64 `groot:"ArrayFloat64[10]"`
	ROOT_N            int32       `groot:"N"`
	ROOT_SliceInt32   []int32     `groot:"SliceInt32"`
	ROOT_SliceInt64   []int64     `groot:"SliceInt64"`
	ROOT_SliceUInt32  []uint32    `groot:"SliceUInt32"`
	ROOT_SliceUInt64  []uint64    `groot:"SliceUInt64"`
	ROOT_SliceFloat32 []float32   `groot:"SliceFloat32"`
	ROOT_SliceFloat64 []float64   `groot:"SliceFloat64"`
}

type DataReader struct {
	Data   Data
	Tree   rtree.Tree
	Reader *rtree.Reader
}
